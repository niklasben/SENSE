<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:50:00Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:1199">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:1199</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:004</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="deu">Eine logische Applikationssprache zur parallelen Verarbeitung von Neuronalen Netzen - Anwendung in der Qualitätssicherung von Agrarprodukten</dc:title>
          <dc:title xml:lang="eng">A Logical Application Language for Parallel Execution of Neural Networks -  Application in Quality Assurance of Agricultural Products</dc:title>
          <dc:creator>Richter, Sascha</dc:creator>
          <dc:subject>ddc:004</dc:subject>
          <dc:description xml:lang="deu">Diese Arbeit ist ein Beitrag zu den Wissensgebieten der verteilten künstlichen Intelligenz, der parallelen logischen Programmierung und der parallelen Verarbeitung von Neuronalen Netzen auf einem Rechnercluster. Es wird eine logische Applikationssprache beschrieben, die speziell im Hinblick auf die Qualitätssicherung von Agrarprodukten entworfen wurde. Die Applikationssprache unterstützt den Zugriff auf Datenbanken. Die logische Applikationssprache Mulog besteht aus mehreren Komponenten, die mittels CORBA und SOAP kommunizieren. Darüberhinaus wird die Erzeugung von Neuronalen Netzen auf mehreren Rechnern in einem Rechnerverbund unterstützt und eine parallele Ausführung von Programmen ermöglicht. Der Quellcode, der in der Applikationssprache Mulog geschriebenen Programme, wird dabei durch einen Compiler in einen Zwischen-Code übersetzt, der zur Laufzeit des Programms durch einen Zwischen-Code Interpreter ausgeführt wird. Die Parallelisierung wird durch eine Erweiterung der Zwischen-Code-Befehle erreicht, die eine asynchrone Ablaufsteuerung und Verteilung der Zwischen-Code Programme auf einem Cluster von Computern zur Laufzeit erst ermöglicht. Die Entwicklung von wissensbasierten Systemen wird durch die Inferenzmaschine unterstützt. Die Prädikatenlogik 1. Stufe bildet die Grundlage für die Semantik und der Syntax der logischen Applikationssprache Mulog. Die Hornklauseln stellen eine Unterklasse der prädikatenlogischen Formeln dar, die die Basis für die Syntax der logischen Applikationssprache bilden. Das gesamte System ermöglicht das dynamische Hinzufügen von Rechnern zur Laufzeit. Es können verschiedene Typen von Neuronalen Netzen direkt durch Befehle in der Applikationssprache Mulog erzeugt werden. Bei der Ernte, Lagerung und Verarbeitung von Kartoffeln entstehen in der Kartoffel schwarze Flecken. Diese Schwarzfleckigkeit ist vielen Verbrauchern bekannt und wird als Qualitätsmangel angesehen. Damit dieser Qualitätsmangel beseitigt werden kann, müssen die für die Entstehung verantwortlichen Einflussfaktoren identifiziert werden. Eine Datenbank mit potentiell verdächtigen Einflussfaktoren, wie mechanischer Belastung, Temperatur, Kalium etc. wurde für verschiedene Kartoffelsorten erfaßt. Mit Hilfe der Applikationssprache Mulog wurden Programme entwickelt, die eine Vielzahl von Neuronalen Netzen parallel auf mehreren Rechnern in einem Rechnerverbund erzeugt haben. Es wird für jede Kartoffelsorte eine Vielzahl von Neuronalen Netzen vom Typ Backpropagation erzeugt. Der Eingabevektor besteht dabei aus den Daten von zwei Einflussfaktoren. Der Ausgabevektor ist dabei die gemessene Schwarzfleckigkeit. Es werden alle Permutationen von zwei Einflussfaktoren als Basis für jeweils ein Neuronales Netz herangezogen, so dass für jede mögliche Kombination von zwei Einflussfaktoren am Ende ein Neuronales Netz pro Sorte existiert. Diese Neuronalen Netze wurden anschließend getestet. Durch den Vergleich, der durch die Neuronalen Netze vorhergesagten Schwarzfleckigkeit und der tatsächlichen Schwarzfleckigkeit, konnten Rückschlüsse auf die für die Erzeugung verwendeten Einflussfaktoren gewonnen werden. Die Auswertung der Daten, die mittels der Programme in dem Mulog-System entwickelt und ausgeführt wurden, ergaben dabei eine Übereinstimmung mit dem aktuellen Wissensstand über die Einflussfaktoren. Darüberhinaus konnten Einflussfaktoren, die ebenfalls für die Entstehung von Schwarzfleckigkeit mit verantwortlich gemacht werden, in ihrer Bedeutung für die Entstehung von Schwarzfleckigkeit beurteilt werden. Eine Bewertung der einzelnen Kartoffelsorten zeigt dabei die individuellen Besonderheiten der einzelnen Sorten und die Gewichtung auf.</dc:description>
          <dc:description xml:lang="eng">This thesis is a contribution to the fields of distributed artificial intelligence, parallel logical programming and parallel processing of neuronal networks on a cluster of workstations. A logical application language is described which was designed specifically for quality assurance for agricultural products. The application language supports access to databases. The logical application language Mulog consists of several components which communicate via CORBA and SOAP. Moreover, the generating of neuronal networks on several computers in a computer network is supported, and parallel execution of programs is allowed. The source code of the programs written in the application language Mulog is translated by a compiler into an intermediate code which is executed in program run-time by an intermediate code interpreter. Parallelisation is achieved by an extension of the intermediate code commands which permits asynchronous process control and distribution of the intermediate code programs to a cluster of computers in run-time. The development of knowledge-based systems is supported by the inference machine. A special form of the first-order predicate calculus is the presentation as a Horn clause. Horn clauses forms the basisi of the syntax of the logical application language Mulog. The whole system allows the dynamic addition of computers in run-time. Different types of neuronal networks can be generated directly by commands in the application language Mulog. Black spots arise in potatoes during harvesting, storage and processing. Many consumers are familiar with these black spots, which are regarded as a quality defect. To enable this quality defect to be remedied, the influencing factors that cause it must be identified. A database with potential suspected influencing factors such as mechanical stress, temperature, potassium etc. was collected for different potato varieties. With the aid of the application language Mulog, programs were developed which generated a large number of neuronal networks parallel to each other on several computers in a computer network. A large number of back-propagation neuronal networks were created for each potato type. The input vector consists of the data for two influencing factors. The output vector is the measured incidence of black spots. All permutations of two influencing factors are used as the basis for each neuronal network, so that at the end there is a neuronal network for each variety of potato for each possible combination of two influencing factors. These neuronal networks were then tested. By comparing the black spot prediction by the neuronal networks with the actual incidence of black spots, conclusions can be drawn about the influencing factors used to generate the data. The evaluation of the data developed and executed by the programs in the Mulog system showed an agreement with the current state of knowledge on the influencing factors. In addition, influencing factors which are also regarded as causes of the black spots could be evaluated in their importance for the origination of black spots. An evaluation of individual potato varieties shows the special characteristics of the individual varieties.</dc:description>
          <dc:date>2006-02-09</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/1199</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-12172</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-12172</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/1199/richter_sascha.pdf</dc:identifier>
          <dc:language>deu</dc:language>
          <dc:rights>Deutsches Urheberrecht mit Print on Demand (u.a. für Dissertationen empfohlen)</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
