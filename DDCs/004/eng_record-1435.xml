<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:51:04Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:1435">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:1435</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:004</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="deu">Methodisches Entwickeln von Diensten für Kooperationen am Beispiel der Zusammenarbeit in der öffentlichen Verwaltung</dc:title>
          <dc:title xml:lang="eng">Methodical developing of services for co-operation by the example of co-operation in the public administration</dc:title>
          <dc:creator>Wiedeler, Markus</dc:creator>
          <dc:subject>ddc:004</dc:subject>
          <dc:description xml:lang="deu">Durch die Globalisierung und Dynamik des Wettbewerbs ist die Fähigkeit eines Unternehmens flexibel, arbeitsteilig und effizient als Partner in Wertschöpfungsketten agieren zu können wettbewerbskritisch geworden. So ist die Fähigkeit zur Kooperation und diese dynamisch gestalten zu können für Unternehmen existenziell. Ausgehend von dieser Fragestellung wird in dieser Arbeit ein Konzept zur Modellierung und informationstechnischen Unterstützung kooperativer Arbeit entwickelt. Grundsätzliche Eigenschaften des Ansatzes sind: –Modellierung, systematische und sukzessive Spezifikation von Kooperationsprozessen durch verschiedene Benutzergruppen –strikte Service Orientierung Dazu werden aus den Prozessen für Aktivitäten entsprechende Dienste bestimmt, die von den Partnern der Kooperation zur Zusammenarbeit genutzt werden können. Dienste als autonome Leistungen sollen als gemeinsam genutzte Dienstleistung auch die koordinierenden Aufgaben unterstützen, welches gezeigt wird am Beispiel der öffentlichen Verwaltung, in der viele Aufgaben schon durch z.B. gesetzliche Vorgaben definiert sind. In der Prozessmodellierung werden Aktivitäten weiter in Aufgaben und Aktionen unterschieden. Die komplexeren Aufgaben werden von Diensten unterstützt und die Aktionen durch Basisdienste. Dienste unterstützen somit immer den die Aufgabe beschreibenden Teilprozess. Für die Autonomie des Dienstes muss diese Beschreibung alle notwendigen Informationen umfassen, wie z.B. Ablauf, Informationen, Stakeholder. Für die Organisation, Entwicklung und Nutzung von Diensten werden drei Rollen unterschieden: Der Diensteanbieter als Realisierer und Anbieter der Dienste, die Diensteanwender als die Partner der Kooperation, die die Dienste nutzen und der Domain Engineer, der für die Definition der Dienste und die konsistente Umsetzung verantwortlich ist. In einem in der Arbeit entwickelten Lebenszyklusmodell für Dienste analysiert der Domain Engineer aufgrund seines Domänen spezifischen Wissens die Prozesse und identifiziert Aufgaben, die sich für die Unterstützung mit Diensten eignen. Damit kann es sich um allgemeine „best of breed“ Lösungen für eine Domäne handeln. Diese Dienste und auch die notwendigen Basisdienste beschreibt er für den Diensteanwender aber auch für den Realisierer / Diensteanbieter. Der Diensteanwender kann sich aufgrund der Beschreibung einen Dienst auswählen, der Diensteanbieter aufgrund der Beschreibung einen Dienst realisieren. Nach der Initialisierungsphase, d.h. der Auswahl und der individuellen Anpassung des Dienstes wird er von den Diensteanwendern genutzt. Im Nachgang zu dieser Betriebsphase kommt eine Auswertungsphase, in der der Domain Engineer die Nutzung des Dienstes analysiert, um Verbesserungen an den Diensten vornehmen zu können. Somit wird ein kontinuierlicher Verbesserungsprozess sichergestellt. Das Beschreibungsmodell für Dienste umfasst drei Ebenen: Fachliche Beschreibung, IT-technische Beschreibung und Realisierungsbeschreibung. Auf den ersten beiden Ebenen werden die Dienstemodelle soweit angereichert, dass die Realisierungsbeschreibung als Coderahmen daraus generiert werden kann. Somit wird die Konsistenz zwischen den Ebenen gewährleistet. Exemplarisch umgesetzt wird der Ansatz durch die Definition von Dienstemodellen auf Basis von FUNSOFT-Netzen und die Generierung von WSDL und BPeL Beschreibungen für die Realisierung. Das domänen-spezifische Dienste-Referenzmodell zeigt die Abhängigkeiten zwischen den verschiedenen Diensten auf, denn komplexere Dienste können aus weniger komplexen Diensten komponiert werden. Mit der Entwicklung eines Modellbaukasten werden Geschäftsprozessmodelle genutzt, um damit Dienste für eine Domäne zu erstellen. Die konsistente Beschreibung der Dienste ermöglicht es, im Rahmen eine Serviceorientierung Dienste als Dienstleistungen anzubieten, wie es z.B. mit dem Konzept Software as a Service (SaaS) vorgesehen ist.</dc:description>
          <dc:description xml:lang="eng">By the globalization and dynamics of the competition the ability of an enterprise to act flexibly, based on division of labour and efficiently as partner of value chains became competition critical. Like that the ability for co-operation and the possibility to arrange dynamically became existential for enterprises. On the basis of this question in this work a concept is developed for the modelling and information-technical support of cooperative work. Fundamental characteristics of the solution are: - Modelling, systematic and gradual specification of co-operation processes by different user groups - strict service orientation In addition from the process model for activities corresponding service are determined, which can be used by the partners of co-operation for working together. Services as autonomous achievements are supporting the coordinating tasks also, which are shown by the example of the public administration, in which many tasks are defined already by e.g. legal defaults. Modelling activities within a process model they were differentiate to tasks and actions. The more complex tasks are supported by services and the actions by basis services. Services thus always support the task describing sub process. For the autonomy of the service this description must cover all necessary information, e.g. expiration, information, Stakeholder. For the organization, development and use of services three roles are differentiated: The service provider as developer and supplier of the services, the service users as the partners of co-operation, which the services use and the Domain Engineer, which is responsible for the definition of the services and the consistent conversion. In a life cycle model for services, developed in the work, the Domain Engineer analyzes the processes due to its specific domain knowledge and identifies tasks, which are suitable for the support with services. This can concern general "best of breed" solutions for a domain. He describes these services and also the necessary basis services for the service user in addition, for the Developer/service provider. The service user can select himself services due to the description a service, which realizes service provider also due the description a service. After the initialization phase, i.e. the selection and the individual adjustment of the service it’s used by the service users. In the follow-up to this operating phase an analysis phase comes, in which the Domain Engineer analyzed the use of the service, in order to be able to make improvements on the services. Thus a continuous improvement process is guaranteed. The descriptive model for services covers three levels: Technical description, IT technical description and description of realization. On the first two levels the service models are so far enriched that the description of realization can be generated as code frameworks from it. Thus the consistency between the levels is ensured. The conversion is exemplary shown by the definition of service models on basis of FUNSOFT nets and the generation of WSDL and BPeL descriptions for the Implementation. The domain-specific service reference model shows the dependency between the different services, because more complex services can be composed from less complex services. With the development of this model construction box business processing concepts are used, in order to provide services for a domain. The consistent description of the services makes it possible to offer software as services how it is intended e.g. with the concept software as a service (SaaS).</dc:description>
          <dc:date>2007-02-07</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>application/zip</dc:format>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/1435</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-14893</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-14893</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/1435/original_wiedeler_markus.zip</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/1435/wiedeler_markus.pdf</dc:identifier>
          <dc:language>deu</dc:language>
          <dc:rights>Deutsches Urheberrecht mit Print on Demand (u.a. für Dissertationen empfohlen)</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
