<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:54:41Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:2223">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:2223</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:004</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="eng">Multimodal Interaction in Smart Environments: A Model-based Runtime System for Ubiquitous User Interfaces</dc:title>
          <dc:title xml:lang="deu">Multimodale Interaktion in Intelligenten Umgebungen: Ein Modell-basiertes Laufzeitsystem f√ºr Allgegenw√§rtige Benutzerschnittstellen</dc:title>
          <dc:creator>Blumendorf, Marco</dc:creator>
          <dc:subject>ddc:004</dc:subject>
          <dc:description xml:lang="eng">The increasing popularity of computers in all areas of life raises new challenges for computer scientists and developers in all areas of computing technology. Networked resources form smart environments, which integrate devices and appliances with sensors and actors, and make an ongoing paradigm shift towards ubiquitous computing paradigms visible. With this growing pervasiveness of computing technology, their user interfaces need to transport and hide an increasing complexity. In this work the term Ubiquitous User Interface (UUI) is coined to denote user interfaces that support multiple users, using different devices to interact via multiple modalities with a set of applications in various contexts. The creation of such user interfaces raises new requirements for their development and runtime handling. The utilization of models and modeling technologies is a promising approach to handle the increasing complexity of current software. This thesis describes a model-based approach that combines executable user interface models with a runtime architecture to handle UUIs. Executable models identify the common building blocks of dynamic, self-contained, models that integrate design-time and runtime aspects. Bridging the gap between design- and runtime models allows the utilization of design information for runtime decisions and reasoning about interaction and presentation semantics. Based on the concept of executable models a set of metamodels is introduced, that picks-up design-time features of current user interface description languages and integrates additional runtime aspects like state information and dynamic behavior. The defined metamodels range from context-, service- and task- to abstract- and concrete interaction model and aim at the definition of the aspects of UUIs on different levels of abstraction. Mappings between the models allow the exchange of information for state synchronization and data exchange. The integration of the concepts into the Multi-Access Service Platform as an architecture for the interpretation of the models, provides a novel approach to utilize user interface models for the creation and handling of Ubiquitous User Interfaces at runtime. It provides components to support shaping according to interaction device specifics, multimodal interaction, user interface distribution and the dynamic adaptation of the user interface to context information. The integration of the stateful user interface models with the outside world is addressed by the projection of the model state to UUI presentations and the stimulation of state transitions within the models, based on user input. Integrating distribution, fusion and adaptation models bridges real-world needs and the modeled user interface definition. Various interaction devices are supported to convey the internal state of the user interface model via a multimodal presentation, distributed across multiple interaction resources. The implementation of the runtime architecture has been integrated into a smart home environment as part of the Service Centric Home project and served as implementation platform for different multimodal home applications. Case studies have been conducted, to evaluate the developed concepts. The realization of various executable models supported their combination into a complex net of models at runtime and allowed to prove the feasibility of the developed approach.</dc:description>
          <dc:description xml:lang="deu">Die wachsende Verbreitung des Computers in allen Bereichen des Lebens birgt neue Herausforderungen f√ºr Wissenschaftler und Programmierer in verschiedensten Fachrichtungen der Informatik. Vernetzte Ger√§te bilden intelligente Umgebungen, die unterschiedlichste Ger√§te, Sensoren und Aktoren integrieren und leiten allm√§hlich einen Paradigmenwechsel in Richtung des ‚ÄúUbiquitous Computing‚Ä? ein. Mit der wachsenden Durchdringung unserer Lebensbereiche durch Computer-Technologie, nimmt auch das Bed√ºrfnis zu, die steigende Komplexit√§t √ºber neuartige Benutzerschnittstellen einerseits handhabbar zu machen und andererseits vor dem Nutzer zu verbergen. Diese Arbeit pr√§gt den Begriff Ubiquitous User Interface (Allgegenw√§rtige Benutzerschnittstelle) um Schnittstellen zu bezeichnen, die einer Vielzahl von Nutzern erlauben mit verschiedenen Ger√§ten √ºber mehrere Modalit√§ten mit einem Satz von Diensten in wechselnden Situationen zu interagieren. Die Entwicklung und Bereitstellung solcher Benutzerschnittstellen stellt neue Anforderungen an Design und Laufzeit. Der Einsatz von Modellen und Modellierungstechnologien ist ein vielversprechender Weg um der steigenden Komplexit√§t von Software Herr zu werden. Diese Arbeit beschreibt einen modell-basierten Ansatz, der ausf√ºhrbare Modelle von Benutzerschnittstellen mit einer Laufzeitarchitektur verbindet, um die wachsende Komplexit√§t von Benutzerschnittstellen zu adressieren. Ausf√ºhrbare Modelle identifizieren dabei die gemeinsamen Bausteine von dynamischen, in sich geschlossenen Modellen, die Design- und Laufzeitaspekte kombinieren. Die √úberbr√ºckung der Kluft zwischen Design- und Laufzeit innerhalb eines Modells erm√∂glicht die Heranziehung von Designinformationen f√ºr Laufzeitentscheidungen sowie Schlussfolgerungen √ºber die Semantik von Interaktion und Pr√§sentation. Basierend auf dem Konzept von ausf√ºhrbaren Modellen wird ein Satz von Metamodellen eingef√ºhrt, der Designaspekte aktueller Benutzerschnittstellenbeschreibungssprachen aufgreift und zus√§tzliche Laufzeitaspekte wie Zustandsinformation und dynamisches Verhalten integriert. Die definierten Metamodelle umfassen dabei Kontext-, Dienst- und Aufgabenmodelle, ebenso wie abstrakte und konkrete Interaktionsmodelle. Sie erm√∂glichen die Definition der Elemente Allgegenw√§rtiger Benutzerschnittstellen auf verschiedenen Abstraktionsebenen. Beziehungen zwischen den Modellen erm√∂glichen den Austausch von Informationen zur Zustandssynchronisierung und den Datenaustausch zur Laufzeit. Die Integration der Konzepte in die Multi-Access Service Platform, einer Architektur f√ºr die Interpretation von Benutzerschnittstellenmodellen, stellt einen neuartigen Ansatz zur Nutzung dieser Modelle zur Erstellung und Verwaltung Allgegenw√§rtiger Benutzerschnittstellen dar. Die Architektur bietet Unterst√ºtzung f√ºr die Anpassung der Pr√§sentation in Abh√§ngigkeit der Ger√§teeigenschaften, multimodale Interaktion, Verteilung von Benutzerschnittstellen √ºber mehrere Ger√§te und die dynamische Anpassung an Kontextinformationen. Die Integration zustandsbehafteter Benutzerschnittstellenmodelle mit der Welt au√üerhalb dieser Modelle wird durch die Projektion des Modellzustandes auf die Darstellung als Benutzerschnittstelle und die Stimulation von Zustandswechseln auf Basis von Benutzereingaben erreicht. Modelle f√ºr die Verteilung, multimodale Informationsverarbeitung (Fusion) und Adaption der Benutzerschnittstelle verbinden die √§u√üere Welt mit der modellierten Benutzerschnittstellenbeschreibung. Verschiedenste Interaktionsger√§te werden unterst√ºtzt, um dem Nutzer den internen Zustand des Benutzerschnittstellenmodells, mit Hilfe von multimodaler Interaktion, √ºber verschiedene Interaktionsressourcen zu pr√§sentieren. Die Implementierung der Laufzeitarchitektur der Multi-Access Service Platform wurde als Teil des Service Centric Home Projektes in eine intelligente Heimumgebung integriert und diente als Plattform f√ºr die Implementierung verschiedener Applikationen f√ºr das intelligente Heim. Fallstudien wurden durchgef√ºhrt um die entwickelten Konzepte zu evaluieren. Die Umsetzung durch verschiedene ausf√ºhrbare Modelle erm√∂glichte dabei die Kombination der Modelle in einem komplexen Netz zur Laufzeit und zeigte die Anwendbarkeit der entwickelten L√∂sung.</dc:description>
          <dc:date>2009-09-15</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>text/x-tex</dc:format>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/2223</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-23251</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-23251</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/2223/original_Thesis_2.0_final.tex</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/2223/blumendorf_marco.pdf</dc:identifier>
          <dc:language>eng</dc:language>
          <dc:rights>Deutsches Urheberrecht mit Print on Demand (u.a. f√ºr Dissertationen empfohlen)</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
