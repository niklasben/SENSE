<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:50:50Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:1384">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:1384</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:004</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="eng">Employing Ontologies for an Improved Development Process in Collaborative Engineering</dc:title>
          <dc:title xml:lang="deu">Einsetzung von Ontologien zur Verbesserung des Entwicklungsprozesses im Collaborative Engineering</dc:title>
          <dc:creator>Tudorache, Tania</dc:creator>
          <dc:subject>ddc:004</dc:subject>
          <dc:description xml:lang="eng">This work brings a contribution to the improvement of the product development process in the engineering domain. The overall goal of the design process is to realize in a short time and with minimal costs a high quality design solution that satisfies all customer requirements. In order to achieve this goal and to master the product complexity, a divide-and-conquer approach is applied: The design task is split in several development branches, each of them being concerned with only one aspect of the product. At different stages of the design process, the design models resulting from the different development branches are synchronized with each other in order to ensure the consistency of the overall design. However, checking the consistency of a design model and between different design models is a very challenging task. One of the reasons is that the engineering tools employed by the development branches operate on models that have different conceptualization of a product according to their own viewpoint. For instance, a computer-aided design (CAD) tool will model the geometrical characteristics of a product, while a simulation tool will model the behavior of the product. Although the two design models represent different viewpoints on the product, they must be consistent with each other, if a common implementation (i.e., the product) of the two design models should be realized. Besides the consistency checking of design models, the propagation of design changes from one model to another is also essential. These two tasks are very frequently done in the design process, and ideally they should be automated. However, there are several hindrances to an automation of these tasks. First, the engineering tools do not typically interoperate. Exchanging model information between engineering tools is often done manually, is error-prone and difficult, considering the size and complexity of the design models. Second, the design models are represented using different modeling languages with their own syntax and modeling methodology. Third, the design models operate with different conceptualization of the product according to their own view on the product. Very often many aspects of the design model remain implicit and are known only to the engineers who have actually built the model. Forth, there are no explicit or formal correspondences between the design models that could be used to asses the consistency between the models and to propagate the design changes. The contribution that this work brings to the improvement of the design process is two fold. First, it provides a framework for building higher quality design models. Second, it provides a framework that supports the automation of the consistency checking between the design models and for change propagation. The two goals are achieved by using a formal approach to modeling engineering systems based on ontologies. Ontologies are formal descriptions of the objects, of their properties and relationships in a certain domain. Ontologies also contain axioms that make domain assumption explicit both for humans and computers. Tools that commit to using the same ontology have a better chance to achieve interoperability and consistency between their models. As part of this work, an engineering ontology has been developed for representing engineering systems. The engineering ontology has been used to enrich the representation of the design models with domain knowledge. Another ontology has been developed for representing the requirements of a product in a formal way. Logical reasoning on the enriched design models has been used to check the fulfillment of the requirements. The second goal was achieved by defining in a formal way the consistency between different design models. This is supported by a mechanism for representing the correspondences (or mappings) between concepts in the design models. The mapping mechanism can be used to check the consistency of the design models or to propagate changes in one design model to another. The concepts in this work have been implemented in two prototypes that have been used in three scenarios in the design process of the automotive domain. Employing ontologies to make domain assumptions explicit and for enriching design models with domain knowledge has proved to enhance the quality of the models, to enable the reuse of design models and to support the interoperation of the engineering tools.</dc:description>
          <dc:description xml:lang="deu">Ziel dieser Arbeit ist es Produktentwicklungsprozesse im Maschinenbau zu verbessern. Gesamtziel solcher Entwicklungsprozesse ist die Erstellung eines Produkts in kürzester Zeit und mit minimalen Kosten welche alle Kundenanforderungen erfüllt. Um die häufig auftretende Komplexität solcher Prozesse zu bewältigen wird typischerweise ein „divide-et-impera“-Ansatz verfolgt: Die Entwicklungsaufgabe wird in mehrere Bereiche unterteilt entsprechend den verschiedenen Aspekten eines Produkts. Zu vordefinierten Meilensteinen werden Entwurfsmodelle welche in den Bereichen entstehen miteinander synchronisiert um die Konsistenz des Gesamtaufbaus sicherzustellen. Informationstechnologie (IT) spielt zur Bewältigung der Aufgaben eine zentrale Rolle. Diese Arbeit adressiert zahlreiche Probleme die sich in diesem Zusammenhang ergeben. Bei einer solchen Entwicklung kommen zahlreiche unterschiedliche IT Systeme zum Einsatz wie z.B. computergestützte Entwicklungswerkzeuge (CAD) um geometrische Eigenschaften zu modellieren oder Simulationswerkzeuge um das Verhalten von Produkten darzustellen. Dabei hat jedes System typischerweise seine eigene Sicht auf das Produkt. Um die Konsistenz des Gesamtaufbaus sicherzustellen muß eine Vielzahl von Sichtweisen in Einklang gebracht werden um Konsistenz des Gesamtmodells zu gewährleisten. Gemeinsames Arbeiten im Team erfordert eine regelmäßige Propagierung von Änderungen von einem System in andere Systeme. Derzeit erfolgt diese Propagierung weitestgehend händisch, was bei zunehmender Modell-Komplexität und –Größe zu hohen Fehlerraten führt. Erschwert wird die Propagierung durch den Einsatz unterschiedlichster Entwicklungsmethodiken für jedes System sowie den Einsatz unterschiedlichster Modellierungssprachen. Weiterhin bleiben viele Aspekte der Entwurfsmodelle implizit und sind nur den jeweiligen Entwicklern bekannt. Schließlich sind auch die Beziehungen zwischen verschiedenen Entwurfsmodellen implizit, was die Automatisierung der Änderungspropagierung deutlich erschwert. Der konzeptionelle Beitrag dieser Arbeit besteht aus einem Rahmenwerk zur Entwicklung hochwertiger Entwurfsmodelle welches eine automatische Konsistenzprüfung von Entwurfsmodellen ermöglicht und eine automatische Propagierung von Änderungen zwischen Entwurfsmodellen unterstützt. Grundlage ist der Einsatz von Ontologien um implizite Aspekte der Entwurfsmodelle explizit zu machen. Ontologien sind formale Beschreibungen eines Bezugsrahmens welche relevante Gegenstände, die Eigenschaften der Gegenstände, die Beziehungen der Gegenstände untereinander sowie Grundannahmen des Bezugsrahmens in Form von Axiomen beschreiben. Ontologien unterstützen die Kommunikation zwischen Menschen, zwischen IT Systemen und zwischen Menschen und IT Systemen. Die Verwendung derselben Ontologie für verschiedene IT Systeme erlaubt beispielsweise eine Austauschbarkeit der Entwurfsmodelle sowie eine Konsistenzprüfung des Gesamtsystems. Als Teil der Arbeit wurden mehrere Ontologien erstellt. Die „Engineering Ontology“ unterstützt die Anreicherung der Entwurfsmodelle durch weiteres Hintergrundwissen und hilft insbesondere beim Explizieren von Aspekten. Die „Requirements Ontology“ unterstützt beim Erfassen von Anforderungen an ein Produkt. Die Verwendung von Ontologien erlaubt das Anwenden von logischen Schlußfolgerungen, z.B. um die Erfüllung von Produktanforderungen automatisch zu überprüfen. Weiterhin können durch die Verwendung von Ontologien explizite Repräsentationen der Zuordnungen der Entwurfsmodelle untereinander erstellt werden, die das automatische Propagieren von Änderungen erlauben. Die Konzepte wurden in zwei Softwareprototypen implementiert welche in drei unterschiedlichen Szenarien im Entwicklungsprozeß eines Automobilherstellers angewendet wurden. In allen Szenarien konnte der Vorteilhafte Einsatz von Ontologien zur Konsistenzprüfung und Änderungspropagierung gezeigt werden. Weiterhin konnte gezeigt werden, daß die Qualität und die Widerverwendbarkeit der Entwurfsmodelle durch die Anreicherung mit Hintergrundwissen und Axiomen signifikant gesteigert wurde und die Austauschbarkeit zwischen den IT Systemen ermöglicht wurde.</dc:description>
          <dc:date>2006-12-13</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/1384</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-14377</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-14377</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/1384/tudorache_tania.pdf</dc:identifier>
          <dc:language>eng</dc:language>
          <dc:rights>Deutsches Urheberrecht mit Print on Demand (u.a. für Dissertationen empfohlen)</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
