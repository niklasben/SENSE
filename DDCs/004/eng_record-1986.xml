<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:53:23Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:1986">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:1986</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:004</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="eng">Behavioral Congruences and Verification of Graph Transformation Systems with Applications to Model Refactoring</dc:title>
          <dc:title xml:lang="deu">Verhaltenskongruenzen und Verifikation von Graphtransformationssystemen mit Anwendungen auf Modell-Refactoring</dc:title>
          <dc:creator>Salum Rangel, Guilherme</dc:creator>
          <dc:subject>ddc:004</dc:subject>
          <dc:description xml:lang="eng">The concept of borrowed contexts has opened up graph transformations to the notion of an external ''observer'' where graphs (specifying systems) may interact with an environment in order to evolve. This leads to open systems in which a clear line delimits internal (non-observable) and external (observable) behavior. The observable interactions of a graph build up labeled transition systems such that bisimulations are automatically congruences, which means that whenever one graph is bisimilar to another, one can exchange them in a larger graph without effect on the observable behavior. This result turns out to be very useful for model refactoring, since one part of the model can be replaced by another bisimilar one. The main goal of this thesis is twofold, namely to further develop the borrowed context framework and to explore its suitability as an instrument to reason about behavior preservation in model refactoring. First we extend the borrowed context framework to handle rules with negative application conditions, which are often a required feature of nontrivial system specifications. That is, a rule may only be applied if certain patterns are absent in the vicinity of a left-hand side. This extension, which is carried out for adhesive categories, requires an enrichment of the transition labels which now do not only indicate the context that is provided by the observer, but also constrain further additional contexts that may (not) satisfy the negative application condition. We have shown that bisimilarity is still a congruence when rules have negative application conditions. Experience shows that bisimulation proofs easily become tedious tasks and very prone to error when done by hand. In order to overcome this problem we have extended an existing on-the-fly bisimulation checking algorithm to the borrowed context setting and defined additional procedures to mechanize the verification of graphs for bisimilarity. This algorithm forms the core of a tool support which will enable us to come up with behavior analysis tools based on the borrowed context machinery. Finally, techniques based on borrowed contexts are defined to check model refactorings for behavior preservation, which is always a crucial aspect of every refactoring transformation. One technique checks instances of a metamodel for bisimilarity w.r.t. to a set of productions defining the operational semantics of the metamodel. Bisimilarity implies preservation of behavior. A more elaborate technique shifts the behavior-preservation focus from instances of a metamodel to refactoring rules, where rules are checked for behavior preservation. One of the advantages of these techniques is that they are not tied up to specific metamodels, but rather can be applied to any metamodel whose operational semantics can be described by finite graph productions.</dc:description>
          <dc:description xml:lang="deu">Das Konzept von Borrowed-Contexts eröffnete für Graphtransformationen die Möglichkeit eines externen ''Beobachters'', wobei Graphen (als Spezifikationen von Systemen) mit einer Umgebung kommunizieren können, um sich zu entwickeln. Dies führt zu offenen Systemen, in denen internes (nicht beobachtbares) und externes (beobachtbares) Verhalten unterschieden werden. Die beobachtbaren Interaktionen bilden ein Transitionssystem derart, dass Bisimilaritäten automatisch Kongruenzen sind. Das heißt, wenn ein Graph bisimilar zu einem anderen ist, können beide Graphen im Kontext eines größeren Graphen ohne Auswirkung auf das beobachtbare Verhalten ausgetauscht werden. Dieses Ergebnis ist sehr nützlich für Modell-Refactoring, weil ein Teil des Modells durch ein bisimilares Teil ersetzt werden kann. Das Hauptziel dieser Arbeit besteht darin, den Ansatz von Graphtransformationen mit Borrowed-Contexts weiter zu entwickeln und auch seine Eignung zur Analyse der Bewahrung des Verhaltens im Anwendungsgebiet Modell-Refactoring zu erforschen. Erstens erweitern wir den Borrowed-Context Ansatz auf Regeln mit negativen Anwendungsbedingungen, die oft in komplexen Spezifikationen verwendet werden. Dies bedeutet, dass eine Regel nur angewendet werden darf, wenn bestimmte Muster außerhalb einer linken Seite abwesend sind. Diese Erweiterung, die im Rahmen von Adhesiven Kategorien durchgeführt wird, erfordert auch eine Erweiterung der Label des Transitionssystems um negative Anwendungsbedingungen. Als wichtiges Ergebnis zeigen wir, dass die Bisimilarität immer noch eine Kongruenz ist, wenn Regeln negative Anwendungsbedingungen haben. Die Erfahrung zeigt, dass Bisimulationsbeweise langwierig und sehr fehleranfällig werden, wenn sie von Hand durchgeführt werden. Um dieses Problem zu lösen, haben wir einen bestehenden ''on-the-fly'' Bisimulations-Algorithmus um zusätzliche Prozeduren zur Mechanisierung der Überprüfung der Bisimilarität von Graphen im Rahmen des Borrowed Context Ansatzes definiert. Dieser Algorithmus bildet den Kern einer Werkzeugunterstützung für die Entwicklung von Techniken zur Verhaltensanalyse basierend auf Graphtransformationen mit Borrowed Contexts. Darauf aufbauend werden Techniken definiert, um die Verhaltensbewahrung im Anwendungsbereich Modell-Refactoring zu untersuchen. Verhaltensbewahrung ist immer ein wesentlicher Aspekt jeder Refactoring-Transformation. Eine Technik überprüft die Bisimilarität von Instanzen eines Metamodells in Bezug auf Regeln, die die operationelle Semantik des Metamodells beschreiben, wobei Bisimilarität Verhaltensbewahrung impliziert. Eine zweite Technik bezieht sich auf Verhaltensbewahrung von Refactoring-Regeln. Einer der Vorteile dieser Techniken ist, dass sie nicht an spezifische Metamodelle gebunden sind, sondern auf jedes Metamodell angewendet werden können, deren operationelle Semantik durch endliche Graphregeln beschrieben werden kann.</dc:description>
          <dc:date>2008-11-25</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>application/zip</dc:format>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/1986</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-20807</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-20807</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/1986/original_salumrangel_guilherme_sources.zip</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/1986/salumrangel_guilherme.pdf</dc:identifier>
          <dc:language>eng</dc:language>
          <dc:rights> CC BY-SA: Creative Commons Lizenz: Namensnennung, Weitergabe zu gleichen Bedingungen</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
