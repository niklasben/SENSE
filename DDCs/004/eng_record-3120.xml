<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:58:42Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:3120">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:3120</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:004</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="eng">Towards Interactive Landscape Visualization</dc:title>
          <dc:title xml:lang="deu">Gen interaktiver Landschaftsvisualisierung</dc:title>
          <dc:creator>Clasen, Malte</dc:creator>
          <dc:subject>ddc:004</dc:subject>
          <dc:description xml:lang="eng">In this thesis we present the building blocks of an interactive landscape visualization system focused on terrain and vegetation. First, we describe the data sources in a typical landscape visualization scenario, where terrain elevation and aerial images are exported from a geographic information system (GIS) and enriched with distributions of third-party plant models. This part sets the constraints for the following methods, presented in order of application: Level of Detail (LoD) generation for the plants has to be done only once for each model, independent of the visualization project at hand. We present a method based on lines and ellipsoids. We leverage the Expectation Maximization algorithm with a Gaussian Mixture Model to create a hierarchy of high-quality leaf clusterings, while the branches are simplified using agglomerative bottom-up clustering to preserve the connectivity. The simplification runs in a preprocessing step and requires no human interaction. For a fly by over and through a scene of 10k trees, the resulting LoD can be rendered on average at 40 ms/frame, up to 6 times faster than billboard clouds with comparable artifacts. Next we describe how to load and organize the spatial data for a landscape visualization project. We describe a conceptually simple pipeline that handles on-the-fly data decompression and synthesis in a unified process. Possible terrain data sources range from static satellite imagery over per-texel-processing such as image blending routines to light-weight simulations and synthesizers such as noise and filter based texture generators. Point data such as plant instances and polygonal shapes such as building outlines can be handled in the same data structures. The sources are evaluated in parallel based on dependency chains. Given the resulting terrain textures, we describe a terrain rendering algorithm for spherical terrains based on clipmaps. It leverages the high geometry throughput of current GPU to render large static triangle sets. The vertices are displaced by a height map texture. Our main contribution is mapping of texture coordinates to calculate the height map sample position based on the static vertex offset and the variable view position. On top of the terrain, we render the preprocessed plant model LoD by raycasting the line and ellipsoid primitives. We extend the ellipsoids by noise textures for alpha-test opacity and normal mapping. This yields a more realistic image, while still avoiding the aliasing artifacts of subpixel-sized primitives. We further show how physically based shading improves the perceived depth complexity. As a last step rendering step, we postprocess the rendered image to apply deferred shading including shadows and atmospheric scattering. Following the methods, we describe the resulting landscape visualization system from a user’s perspective. After an overview over the features, we present an evaluation in a case study of cliff erosion for climate change research.</dc:description>
          <dc:description xml:lang="deu">In dieser Dissertation stellen wir die Komponenten eines interaktiven Landschaftsvisualisierungssystems mit Schwerpunkt auf Gelände und Vegetation vor. Zuerst beschreiben wir die Datenquellen eines typischen Landschaftsvisualisierungsszenarios, in dem Geländemodell und Luftbilder aus einem Geoinformationssystem (GIS) exportiert und um Pflanzenverteilungen ergänzt werden. Dieser Teil setzt die Rahmenbedingungen für folgende Methoden, vorgestellt in Reihenfolge der Anwendung: Level-of-Detail-Stufen (LoD) für Pflanzen müssen nur ein einziges Mal pro Modell erzeugt werden, unabhängig vom jeweiligen Visualisierungsprojekt. Wir stellen eine Methode vor, die auf Linien und Ellipsoiden basiert. Mit Hilfe des Expectation-Maximization-Algorithmus auf einem Gaussian-Mixture-Model erstellen wir eine Hierarchie qualitativ hochwertiger Blatt-Cluster-Gruppen. Die Aststrukturen vereinfachen wir mit einem agglomerativen Clustering beginnend bei der höchsten Auflösung, um die Konnektivität zu erhalten. Die Vereinfachung erfolgt in einem Vorverarbeitungsschritt und erfordert keinerlei menschliche Eingriffe. Für einen Flug über und durch eine Szene aus 10 000 Bäumen erreichen wir mit unserem LoD eine Geschwindigkeit von durchschnittlich 40 ms pro Bild, was ungefähr sechs Mal schneller ist als Billboard Clouds mit vergleichbaren Bildfehlern. Als nächstes beschreiben wir, wie die räumlichen Daten eines Landschaftsvisualisierungsprojekts geladen und organisiert werden können. Wir zeigen eine konzeptionell einfache Verarbeitungskette, die Datendekompression und -synthese zur Laufzeit in einem vereinheitlichten Prozess handhabt. Als Geländedatenquellen kommen beispielsweise statische Satellitenbilder, texelweise Bildbearbeitungsschritte wie Überblendung oder auch leichtgewichtige Simulationen und Synthesen wie Texturgeneratoren in Frage. Punktdaten wie Pflanzeninstanzen und polygonale Formen wie Gebäudegrundrisse können in denselben Datenstrukturen verarbeitet werden. Die Datenquellen werden parallel in Abhängigkeitsketten ausgewertet. Aufbauend auf den sich daraus ergebenden Geländetexturen stellen wir einen auf Clipmaps basierenden Rendering-Algorithmus für sphärische Gelände vor. Wir nutzen den hohen Geometriedurchsatz aktueller Grafikkarten um große Mengen statischer Dreiecke darzustellen. Die Vertices werden dabei über Höhentexturen verschoben. Unser Hauptbeitrag ist die Abbildung der Texturkoordinaten ausgehend von den statischen Vertex-Positionen und der variablen Ansicht auf die Höhentexturen. über das Gelände zeichnen wir als nächstes die vorbereiteten LoD-Stufen der Pflanzenmodelle. Dazu nutzen wir einen Raycaster für die Linien und Ellipsoide. Wir erweitern die Ellipsoide um Rauschtexturen für Alpha-Test und Normalenvektoren. Das erhöht den Realismus, ohne Aliasing durch Subpixel- Strukturen einzuführen. Weiterhin zeigen wir wie physikalisch basiertes Shading die Wahrnehmung der Tiefenkomplexität verbessert. In einem letzten Schritt zeigen wir die Nachbearbeitung der erzeugten Bilder über Deferred Shading. Hier berechnen wir auch Schatten und atmosphärische Lichtstreuung. Anschließend an die Methodenbeschreibungen beschreiben wir das sich daraus ergebende Landschaftsvisualisierungssystem aus Benutzerperspektive. Nach einem Überblick über die Funktionen stellen wir eine Evaluierung in einer Fallstudie für Klippenerosion vor.</dc:description>
          <dc:date>2011-11-03</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/3120</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-32579</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-32579</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/3120/clasen_malte.pdf</dc:identifier>
          <dc:language>eng</dc:language>
          <dc:rights> CC BY-SA: Creative Commons Lizenz: Namensnennung, Weitergabe zu gleichen Bedingungen</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
