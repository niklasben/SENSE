<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:52:01Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:1659">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:1659</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:004</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="eng">Self-Managing Publish/Subscribe Systems</dc:title>
          <dc:title xml:lang="deu">Selbstmanagende Publish/Subscribe-Systeme</dc:title>
          <dc:creator>Jaeger, Michael A.</dc:creator>
          <dc:subject>ddc:004</dc:subject>
          <dc:description xml:lang="eng">In recent years, event-based systems have been generating considerable interest in industry and academia. One substantial reason for this is that information-driven applications such as automated workflows, information dissemination and aggregation, as well as enterprise application integration gained increasing prominence in their role of being important enablers for easier automation and system integration. Publish/subscribe middleware provides a platform which is well suited to the implementation of event-based systems. These unfold their strength particularly in dynamic scenarios, where usage patterns and system parameters may change unexpectedly. Most of today's publish/subscribe systems are, however, rather static and require manual intervention in order to adapt them to changing conditions. Our research is targeted at large-scale systems on the one hand, where administration is expensive and sometimes impossible due to the high complexity. On the other hand, we also target smaller systems which must be able to run autonomously since administration is not possible (e.g., in remote areas) or the users are not able to take over administrative tasks (e.g., in an e-home scenario). In this thesis, we present our work on reducing the efforts to manage publish/subscribe systems, rendering them self-managing with respect to fault management and performance optimizations thereby. We tackle the problem of fault handling with algorithms for self-stabilizing content-based routing and complement them with a self-stabilizing broker overlay network. Furthermore, we present the first general formal analysis of publish/subscribe systems which also allows to judge the overhead induced by self-stabilization in form of additional messages without having to rely on simulation studies. An important management task in publish/subscribe systems is the reconfiguration of the broker overlay network topology at runtime. However, all algorithms for this task proposed so far may cause both message loss and message ordering violations. We present algorithms for regular and self-stabilizing publish/subscribe systems which prevent this undesirable behavior. Finally, we present a distributed heuristic which enables the broker overlay network to adapt its topology to the notification flows caused by the clients. This way, the system is able to autonomously improve its overall performance. A comprehensive simulation study shows that our heuristic outperforms other heuristics proposed in the past.</dc:description>
          <dc:description xml:lang="deu">Sowohl in der Industrie als auch in der akademischen Forschung hat das Interesse an ereignisbasierten Systemen in den letzten Jahren stark zugenommen. Einer der wesentlichen Gründe für diese Entwicklung ist die wachsende Verbreitung von informationsgetriebenen Anwendungen wie automatisierten Workflows, Informationsverbreitung und -aggregation sowie der Integration von Unternehmensanwendungen. Diese Anwendungen stellen Wegbereiter für eine vereinfachte Automatisierung und Integration von Systemen dar. Publish/Subscribe-Middleware bietet eine hervorragende Plattform für die Implementierung von ereignisbasierten Systemen. Diese wiederum entfalten ihre Stärken vor allem in dynamischen Umgebungen, in denen sich sowohl die Benutzungsmuster als auch die Systemparameter unerwartet ändern können. Die meisten der heutigen Publish/Subscribe-Systeme sind jedoch recht statisch und benötigen manuelle Eingriffe, um sie an sich ändernde Gegebenheiten anzupassen. Unsere Forschung zielt zum einen auf sehr große Systeme ab, deren manuelle Verwaltung aufgrund der hohen Komplexität teuer, wenn nicht gar unmöglich ist. Zum anderen berücksichtigen wir aber auch kleinere Systeme, die autonom operieren müssen, weil eine manuelle Administration nicht möglich ist (z.B. in abgelegenen Gegenden) oder weil ein kompetenter Administrator nicht zugegen ist (z.B. in einem vernetzten Privathaus). In dieser Arbeit präsentieren wir die Ergebnisse unserer Forschung, die darauf abzielt, den Verwaltungsaufwand von Publish/Subscribe-Systemen zu verringern. Dies erreichen wir, indem wir sie zum Selbstmanagement im Hinblick auf Fehler und Leistungsoptimierungen befähigen. Die Fehlerbehandlung unterstützen wir mit Algorithmen zum selbststabilisierenden inhaltsbasierten Routing, die zusätzlich um ein selbststabilisierendes Broker Overlay-Netz ergänzt werden. Darüber hinaus stellen wir die erste formale Analyse von Publish/Subscribe-Systemen vor. Sie erlaubt es auch, die zusätzlichen Kosten zu berechnen, die durch die Selbststabilisierung entstehen, ohne dabei auf Simulationen zurückgreifen zu müssen. Die Rekonfiguration der Broker Overlay-Topologie stellt eine der wichtigsten Managementaufgaben in Publish/Subscribe-Systemen dar. Allerdings ist es bei allen bisher vorgestellten Lösungen möglich, dass sowohl Nachrichten verloren gehen als auch deren Reihenfolge unzulässig verändert wird. In dieser Arbeit werden Algorithmen für herkömmliche und selbststabilisierende Publish/Subscribe-Systeme vorgestellt, die dieses unerwünschte Verhalten nicht aufweisen. Schließlich präsentieren wir eine verteilte Heuristik, die das Broker Overlay-Netz in die Lage versetzt, sich an sich verändernde Nachrichtenströme anzupassen. Dadurch wird das System befähigt, seine Leistung autonom zu verbessern. Umfassende Simulationen haben gezeigt, dass unsere Heuristik die bisher vorgeschlagenen übertrifft.</dc:description>
          <dc:date>2008-01-14</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>text/x-tex</dc:format>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/1659</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-17240</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-17240</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/1659/original_diss.tex</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/1659/jaeger_michael.pdf</dc:identifier>
          <dc:language>eng</dc:language>
          <dc:rights>Deutsches Urheberrecht mit Print on Demand (u.a. für Dissertationen empfohlen)</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
