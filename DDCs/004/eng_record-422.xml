<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:46:06Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:422">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:422</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:004</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="deu">Eine modulare Architektur für dienstbasierte Interaktionen zwischen Agenten</dc:title>
          <dc:title xml:lang="eng">A modular architecture for service-based interactions between agents</dc:title>
          <dc:creator>Sesseler, Ralf</dc:creator>
          <dc:subject>ddc:004</dc:subject>
          <dc:description xml:lang="deu">Mit der zunehmenden Vernetzung vor allem durch das Internet entsteht eine Computerinfrastruktur, die neue Möglichkeiten zur Gestaltung von Dienstplattformen mit sich bringt, aber auch neuartige Anforderungen stellt. Anbieter, Vermittler und Konsumenten von Waren und Dienstleistungen profitieren von der hohen Flexibilität und Dynamik wie auch von dem orts- und zeitunabhängigen Zugang. Dieses Potential läßt sich jedoch nur dann voll ausschöpfen, wenn die Offenheit, Verteiltheit und Heterogenität der Computernetze durch neue Technologien voll beherrschbar und nutzbar gemacht werden kann. Einen interessanten Ansatz hierfür bieten Softwareagenten, die als autonome Spezialisten in den Netzen agieren und untereinander interagieren. Das in dieser Arbeit konzipierte CASA ist eine Architektur für Multiagentensysteme, die sich aufgrund ihrer Modularität sowie der Flexibilität und Interoperabilität der damit erstellten Agenten besonders als Basisplattform zur Realisierung von Dienstumgebungen in elektronischen Netzen eignet. CASA umfaßt die drei Designebenen Agentenaufbau, Agentenkontrolle und Agentengesellschaft sowie die formale Sprache CAL zur Spezifikation von Agenten. Einzelne Agenten werden je nach Bedarf und Aufgabe aus wiederverwendbaren Komponenten zusammengesetzt. Auch noch zur Laufzeit können Komponenten umkonfiguriert sowie hinzugefügt, entfernt oder ausgetauscht werden, ohne die Arbeit des Agenten zu beeinträchtigen. So lassen sich Agenten einfach erstellen und an veränderte Aufgaben anpassen. Die Steuerung von Agenten beruht auf einem wissensbasierten Kontrollschema, das reaktives, zielgerichtetes und interaktives Verhalten zu einer flexiblen Verhaltenssteuerung integriert. Die Verwendung von formalen Wissensstrukturen bietet dabei einerseits eine abstrakte Ebene zur Spezifikation und Analyse von Agenten, andererseits bildet sie die Grundlage der autonomen Verhaltenskontrolle. Zudem ermöglicht das formale Wissen die innerhalb von Agentengesellschaften benötigte Interoperabilität, indem es als Inhalt der Kommunikation und zur Beschreibung der Interaktionsmöglichkeiten der Agenten dient. Dabei werden Interaktionen als Dienste aufgefaßt, die Agenten anbieten und nutzen. Ein Dienst ist eine Handlung, die ein Agent für einen anderen ausführt. Zusammen mit einer Agenteninfrastruktur, die Agenten und Dienste verwaltet, erlaubt das Dienstschema eine flexible, dynamische Zusammenarbeit von Agenten und die Integration von Interaktionen in die Verhaltenssteuerung. Die Sprache CAL ist eine Kombination aus formaler Logik und Programmiersprache, mit der sich sämtliche Wissensaspekte von Agenten ausdrücken lassen. CASA ist eine offene und skalierbare Architektur, mit der sich nach dem Baukastenprinzip flexible, dynamische Multiagentensysteme erstellen lassen. Alle Architekturebenen unterstützen dazu ein hohes Maß an Modularität und Interoperabilität.</dc:description>
          <dc:description xml:lang="eng">Computer networks like the Internet provide a novel infrastructure bearing new possibilities for the realisation of service platforms, while raising new requirements as well. Suppliers, brokers, and consumers of goods and services profit from their flexibility and dynamics as well as from the independency of time and location. To benefit from this potential, the open, distributed, and heterogeneous character of the networks needs to be utilised by new technologies. A promising approach are software agents, which are able to act and interact as autonomous specialists in the networks. CASA is an architecture for multi-agent systems that offers a modular structure and agents with a high degree of flexibility and interoperability. Thus, it provides a suitable basis for the realisation of service platforms in computer networks. CASA is divided into three design levels for agent composition, agent control, and agent societies, which are completed by the formal language CAL for agent specification. Individual agents are assembled from reusable components depending upon their tasks. Even at run-time, components can be reconfigured as well as added, removed, or exchanged without affecting the current work of the agent. Thus, agents are created and adapted to changing tasks easily. Agent control empoys a knowledge-based control scheme that integrates reactive, deliberative, and interactive behaviour. Formal knowledge structures provide an abstract layer for the specification and analysis of agents and form the basis of a flexible, autonomous behaviour control. In addition, formal knowledge is utilised as the content of communications and to describe the interactive capabilities of agents, thereby enabling the interoperability required by agent societies. Interactions are represented as service acts provided and used by agents in order to delegate tasks. In combination with an agent infrastructure that administers agents and services, the service scheme allows flexible and dynamic collaborations among agents and the integration of interactions into the behaviour control. The agent description language CAL is a combination of formal logic and programming language concepts. It covers all aspects of the representation, use, and communication of knowledge by agents. CASA is an open and scalable architecture to build flexible, dynamic multi-agent systems that supports modularity and interoperability at all architectural layers.</dc:description>
          <dc:date>2002-03-07</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/422</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-4171</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-4171</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/422/sesseler_ralf.pdf</dc:identifier>
          <dc:language>deu</dc:language>
          <dc:rights>Deutsches Urheberrecht mit Print on Demand (u.a. für Dissertationen empfohlen)</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
