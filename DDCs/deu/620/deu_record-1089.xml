<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:49:12Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:1089">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:1089</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:620</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="deu">Generalisierte Informationsstrukturen f√ºr Anwendungen im Bauwesen</dc:title>
          <dc:title xml:lang="eng">General Information Structures of Computer Applications in Civil Engineering</dc:title>
          <dc:creator>Bilchuk, Irina</dc:creator>
          <dc:subject>ddc:620</dc:subject>
          <dc:description xml:lang="deu">Ziel : Entwicklung allgemeing√ºltiger Grundlagen f√ºr das Zusammenwirken rechnerintern gespeicherter Daten von Anwendungen im Bauwesen mit einer generalisierten Informationsstruktur an der Oberfl√§che des Computers Ergebnisse : Die mathematische Struktur und die Speicherungsstruktur von Objekten sowie ihre Aggregationen wurden analysiert und als Grundlage f√ºr generalisierte Informationsstrukturen benutzt. F√ºr die persistente Speicherung und Verwaltung der Objekte und Aggregationen von Objekten einer Anwendung wurde eine generalisierte Datenbasis entwickelt. Diese unterst√ºtzt einen schnellen direkten Zugriff auf jedes Einzelobjekt sowie den ungest√∂rten Datenflu√ü zwischen der Datenbasis und der Anwenderoberfl√§che. F√ºr strukturell und funktional abh√§ngige Objekte wurde ein Konzept f√ºr die verz√∂gerte Aktualisierung der Datenbasis untersucht. F√ºr eine praxisnahe Anzahl von strukturell abh√§ngigen Objekten wurde ein effektiver Aktualisierungsalgorithmus entwickelt. Die Untersuchung der generalisierten Anforderungen an Anwendungsoberfl√§chen hat zu dem Padkonzept gef√ºhrt, das in einem ‚ÄûAST-Visualisierer‚Äú implementiert wurde. Transaktionsorientierte Anwenderoberfl√§chen mit generalisierten Informationsstrukturen werden graphisch definiert und mit den Objekten und Methoden der Datenbasis durch ein Klientenkonzept verkn√ºpft. Eine Anwendung wird in zentrale und periphere Modelle gegliedert. Die weitere Unterteilung in persistente und transiente Modelle erfordert das Setzen der Referenzen nach dem Lesen der persistenten Objekte aus den Dateien. F√ºr die Referenzen zwischen den Hauptkomponenten wurde das ‚ÄûWurzel-Konzept‚Äú, f√ºr die Referenzen der √ºbrigen Komponenten das ‚ÄûBei-Bedarf-Konzept‚Äú entwickelt. Folgerungen : Die Objekte einer Anwendung mit generalisierten Informationsstrukturen werden in persistente und transiente Klassen gegliedert. Die persistenten Objekte einer Anwendung werden in einer gemeinsamen Datenbasis gehalten und eindeutig mit ihren Namen identifiziert. Der Name eines Objektes wird zu seiner Identifikation in anderen Objekten, in Feldern und in Mengenobjekten benutzt. Die Rekonstruktion der Referenzen zwischen persistenten und transienten Objekten wird systematisch geplant. Die Art der Rekonstruktion beeinflu√üt die Struktur der Anwendung. Eine Anwenderoberfl√§che mit generalisierter Informationsstruktur besteht aus einem anwendungsunabh√§ngigen und einem anwendungsspezifischen Bereich. Jedes Einzelobjekt kann in einer generalisierten Anwenderoberfl√§che visualisiert werden. Die Nutzung der neuen Informationsstrukturen beeintr√§chtigt die Ausf√ºhrungszeit der Anwendung nicht und f√ºhrt zu √ºberschaubarer, effizienter und f√ºr Erweiterungen geeigneter Software f√ºr Anwendungen.</dc:description>
          <dc:description xml:lang="eng">Aim : Development of a general framework for the interaction of internal computer data of civil engineering applications with a general information structure on the surface of the computer. Results : The mathematical structure and the storage structure of objects and their aggregations were analysed and used as basis for generalized information structures. A generalized data base was developed for the persistent storage and management of objects and aggregations of objects of an application. The data base supports fast direct program access to a singular object as well as direct data flow between the data base and the user interface. A concept for delayed updating of the data base was investigated for structurally and functionally dependent objects. An efficient update algorithm was developed for sets of structurally dependent objects whose size is typical for engineering practise. An investigation of the general requirements for user interfaces led to a pad concept which was implemented in an ‚ÄûAST-Visualiser‚Äú. Transaction-oriented user interfaces with general information structures are defined graphically and connected to objects and methods of the data base with a client concept. An application consists of central and peripheral models. The further differentiation between persistent and transient models requires the reconstruction of references after the persistent objects are read from files. A ‚Äúroot concept‚Ä? was developed for the reconstruction of references between the main components of an application. A ‚Äúby demand concept‚Ä? was developed for other components of the application. Conclusions : Objects of an application with generalized information structure are divided into persistent und transient classes. The persistent objects of an application are stored in a data base und identified uniquely with their names. The name of an object is used for the identification of the object in other objects, arrays and sets. The reconstruction of references between persistent and transient objects is planed systematically. The manner of reconstruction influences the structure of the application. A user interface with generalized information structure consists of an application-independent and an application-dependent part. Each individual object can be visualized on a generalized user interface. The use of the new information structures does not influence the run time of the application and leads to transparent, efficient and extensible software for applications.</dc:description>
          <dc:date>2005-08-31</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/1089</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-10671</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-10671</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/1089/bilchuk_irina.pdf</dc:identifier>
          <dc:language>deu</dc:language>
          <dc:rights>Deutsches Urheberrecht mit Print on Demand (u.a. f√ºr Dissertationen empfohlen)</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
