<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:53:15Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:1957">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:1957</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:620</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="eng">Advanced Gateways in Automotive Applications</dc:title>
          <dc:title xml:lang="deu">Fortgeschrittene Gateways in Automotiven Applikationen</dc:title>
          <dc:creator>Lorenz, Tobias</dc:creator>
          <dc:subject>ddc:620</dc:subject>
          <dc:description xml:lang="eng">Today's devices in automotive environments are linked by several independent networks, such as CAN, MOST and in the future FlexRay. The interconnection technologies between these networks is one of the fastest developing areas in automotive electronics. In recent years the improved capabilities enabled many new features, e.g. driver assistance systems. For the interconnection, complex gateway systems are necessary. Most of them are implemented as a System-On-Chip with high-speed CPUs and large buffer RAMs to provide just this functionality in software. With increasing throughput and number of interfaces on the gateway, this leads to high latency and jitter. Hardware based solutions can provide gateway functionality with hard real-time requirements and, additionally, circumvent the given problems. The developed gateway concept is versatile, thus usable by different network types. It offers gateway functionality in hardware without the need to have a powerful CPU or large buffer RAM. CPU access to the underlying network interfaces is still possible to enable electronic control units (ECUs) to have further functionality. For the gateway configuration, many non-standardized description formats are available. Unfortunately data exchange between different formats is inherently error-prone and time-consuming. A common description format is necessary and is found in the Field Bus Exchange Format (FIBEX). On the other side gateway implementations have proprietary internal formats in which they store their configuration data. An optimal gateway toolchain should be based on the FIBEX configuration data of all connected networks and translate the routing information directly into the internal format of the target implementation. The verification of complex gateway systems is problematic. Programming a remaining bus simulation is usually done manually, takes a long time and almost never covers the complete range of possible gateway mappings. Having an automated verification configuration generator was necessary. Such a regression test environment results in error logs containing patterns, which helps to find design or configuration bugs. Detailed statistics about latency and jitter of every mapping may be generated in parallel. Using FIBEX as common configuration format for the gateway and for the verification environment can eliminate inconsistencies.</dc:description>
          <dc:description xml:lang="deu">Heutige Steuergeräte in Kraftfahrzeugen sind über eine Reihe von unabhängigen Netzwerken, wie CAN, MOST und zukünftig FlexRay, miteinander verbunden. Die zunehmende Verknüpfung stellt derzeit eine der am stärksten wachsenden Bereiche in der Automobilelektronik dar. In den vergangenen Jahren sind durch die dadurch gestiegenen Möglichkeiten viele neue Funktionen entstanden, insbesondere im Bereich der Fahrerassistenzsysteme. Für die Verbindung von Netzwerken sind komplexe Gateway-Systeme notwendig. Derzeit sind diese System-On-Chips mit schnellen CPUs und großen RAMs ausgestattet, speziell um die Gateway-Funktionen in Software zu realisieren. Mit der Zunahme von Datendurchsatz und Schnittstellenanzahl im Gateway, führt dies mittlerweile zu nicht mehr tragbarem Latenz- und Jitterverhalten. Hardwarebasierte Lösungen können die Gateway-Funktionen mit harten Echtzeitanforderungen erfüllen und die bekannten Probleme verhindern. Das entwickelte Gateway-Konzept ist vielseitig und dadurch mit verschiedenen Netzwerktypen nutzbar. Es ermöglicht die Verlagerung der Gateway-Funktion in Hardware, ohne die Notwendigkeit einer schnellen CPU und eines großen Puffer-Speichers. Der CPU-Zugang zu den darunter liegenden Netzwerkschnittstellen ist weiterhin möglich, um weitere Funktionen im Steuergerät zu ermöglichen. Für die Gateway-Konfiguration gibt es viele nicht-standardisierte Konfigurationsformate. Das macht den Austausch von Daten zwischen verschiedenen Formaten fehleranfällig und zeitaufwendig. Ein einheitliches Beschreibungsformat war notwendig und fand sich im Field Bus Exchange Format (FIBEX). Auch intern weisen Gateways verschiedene proprietäre Konfigurationsformate auf. Die entwickelte Gateway-Toolchain ist daher in der Lage eine FIBEX-Konfiguration mit allen darin enthaltenen Konfigurationen zu laden und diese in das interne Format des Gateways zu übersetzen. Die Verifikation eines solchen komplexen Gateway-Systems ist problematisch. Die Programmierung einer Restbussimulation wird üblicherweise manuell vorgenommen, was viel Zeit erfordert und fast nie den kompletten Bereich möglicher Gateway-Funktionen testet. Ein Tool zur automatisierten Erzeugung von Konfigurationen für die Verifikationsumgebung wurde entwickelt. Diese Regressionstestumgebung liefert Fehlermeldungen, deren Muster helfen können Fehler in Hard- und Software zu finden. Detaillierte Statistiken über Latenz und Jitter jeder Gateway-Funktion werden parallel erhoben. Die Benutzung von FIBEX als einheitliches Format für Gateway und Testumgebung hilft dabei Inkonsistenzen zu vermeiden.</dc:description>
          <dc:date>2008-10-28</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/1957</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-19462</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-19462</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/1957/lorenz_tobias.pdf</dc:identifier>
          <dc:language>eng</dc:language>
          <dc:rights>Deutsches Urheberrecht mit Print on Demand (u.a. für Dissertationen empfohlen)</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
