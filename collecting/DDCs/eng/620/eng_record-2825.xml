<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:57:18Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:2825">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:2825</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:620</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="eng">Double-Anchored Software Architecture for Wireless Sensor Networks</dc:title>
          <dc:title xml:lang="deu">Doppelverankerte Softwarearchitektur f√ºr drahtlose Sensornetze</dc:title>
          <dc:creator>Handziski, Vlado</dc:creator>
          <dc:subject>ddc:620</dc:subject>
          <dc:description xml:lang="eng">After a decade of intense research and development, Wireless Sensor Networks (WSNs) are on the verge of transforming from an obscure technology into a viable market segment. In this period, the WSN node hardware has constantly improved, resulting in better functionality while size, cost and energy consumption have been reduced. Unfortunately, the software development process has not been able to keep the same pace. The tight resource constraints and the application-specific requirements are driving developers into closed and integrated solutions which impede design and code reuse, increasing the required effort for developing new applications and adapting them to an ever evolving hardware. The lack of a common software architecture for WSNs is seen by many in the research community as significant contributing factor for the existing inefficiencies. We introduce a double-anchored software architecture that enables effective WSN development through traditional methodologies of design and code reuse, using time-tested principles like functional decoupling and complexity hiding. At the same time, it provides mechanisms for controlling the inherent trade-offs between efficiency and reuse so the above benefits can be achieved without paying a prohibitively high price in performance, compared to a customized and vertically integrated solution. The proposed architecture is specified in the form of a component framework organized around two ‚Äúanchors‚Ä? that provide rigidity and establish a base for design and code reuse. The lower portability anchor abstracts the hardware while enabling explicit control over the performance-portability trade-offs. The upper interoperability anchor abstracts the node-local services behind an expressive publish/subscribe interface and supports application-specific customization. This dissertation contends that a broad software architecture, anchored at these two levels of the software stack, can effectively promote portability and interoperability while maintaining high sensibility towards abstraction costs. We evaluate these claims in qualitative and quantitative way, on the example of several prototype implementations, some of which are in wide use in the WSN community. To support the evaluation we have also developed a custom distributed testing infrastructure that enables efficient testing of functional and non-functional properties of WSN protocols and services.</dc:description>
          <dc:description xml:lang="deu">Nach einem Jahrzehnt intensiver Forschung und Entwicklung sind drahtlose Sensornetze (WSNs) kurz davor, sich von einer unbekannten Technologie in ein tragf√§higes Marktsegment zu verwandeln. W√§hrend dieses Zeitraums hat sich die WSN-Knoten-Hardware st√§ndig verbessert, was zu erh√∂hter Funktionalit√§t und einer Reduzierung von Formfaktor, Kosten und Energieverbrauch gef√ºhrt hat. Leider konnte die Software-Entwicklung nicht mit demselben Tempo voranschreiten. Die Begrenztheit der Betriebsmittel und anwendungsspezifische Anforderungen sind daf√ºr verantwortlich, dass Entwickler geschlossene und integrierte L√∂sungen anstreben, was die Wiederverwendung von Entw√ºrfen und Programmiercode behindern. Dies f√ºhrt dazu, dass der erforderliche Aufwand f√ºr die Entwicklung neuer Anwendungen und ihre Anpassung an die sich kontinuierlich entwickelnde Hardware ansteigt. Das Fehlen einer allgemeinen Softwarearchitektur f√ºr WSNs wird von vielen Mitgliedern der wissenschaftlichen Gemeinschaft als wesentlicher Faktor f√ºr die existierenden Defizite angesehen. Wir pr√§sentieren eine doppelverankerte Softwarearchitektur f√ºr drahtlose Sensornetze, die eine effektive WSN Entwicklung erm√∂glicht, indem traditionelle Methoden des Entwurfes und der Wiederverwendung von Programmiercode angewendet werden, unter Einhaltung von bew√§hrten Prinzipien wie funktioneller Entkoppelung und dem Verbergen von Komplexit√§t. Gleichzeitig wird ein Mechanismus zur Steuerung des inh√§renten Kompromisses zwischen Effizienz und Wiederverwendung zur Verf√ºgung gestellt, so dass sich die genannten Vorteile im Vergleich mit einer ma√ügeschneiderten und vertikal integrierten L√∂sung ohne einen √ºberm√§√üig hohen Nachteil an Leistungsf√§highkeit realisieren lassen. Die vorgestellte Architektur ist als ein Komponenten-System ausgef√ºhrt, das um zwei ‚ÄúAnker‚Ä? angeordnet ist, die Best√§ndigkeit erm√∂glichen und als die Basis f√ºr den Entwurf und die Wiederverwendung von Programmiercode dienen. Der untere Portabilit√§ts-Anker abstrahiert die Hardware und erm√∂glicht explizite Kontrolle des Performance-Portabilit√§t Trade-offs. Der obere Interoperabilit√§t-Anker abstrahiert die Knoten-lokalen Dienste mithilfe einer expressiven Publish/Subscribe Schnittstelle und unterst√ºtzt anwendungsspezifische Anpassung. Diese Dissertation vertritt die These, dass eine breite Softwarearchitektur, die auf diesen beiden Ebenen des Software-Stacks verankert ist, wirksam Portabilit√§t und Interoperabilit√§t f√∂rdern kann und dass dies unter Beachtung der Kosten f√ºr die involvierten Abstraktionen geschieht. Wir werten diese Behauptungen in qualitativer und quantitativer Art und Weise aus, und zwar anhand eines Beispiels, das eine Reihe von Prototyp-Implementierungen realisiert, von denen einige breite Anwendung in der WSN-Forschungs-Gemeinschaft gefunden haben. Zur Unterst√ºtzung der Auswertung haben wir eine spezifische Test-Infrastruktur entwickelt, die eine effiziente Pr√ºfung der funktionalen und nicht-funktionalen Eigenschaften von WSN-Protokollen und -Diensten erm√∂glicht.</dc:description>
          <dc:date>2011-03-14</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/2825</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-29895</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-29895</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/2825/handziski_vlado.pdf</dc:identifier>
          <dc:language>eng</dc:language>
          <dc:rights> CC BY-NC-ND: Creative Commons-Lizenz: Namensnennung, nicht kommerziell, keine Bearbeitung</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
