<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xsl/oai2.xsl"?><OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2014-10-15T06:47:16Z</responseDate>
  <request verb="GetRecord" metadataPrefix="oai_dc" identifier="oai:kobv.de-opus4-tuberlin:682">http://opus4.kobv.de/opus4-tuberlin/oai</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:kobv.de-opus4-tuberlin:682</identifier>
        <datestamp>2013-07-01</datestamp>
        <setSpec>doc-type:doctoralthesis</setSpec>
        <setSpec>bibliography:false</setSpec>
        <setSpec>ddc</setSpec>
        <setSpec>ddc:004</setSpec>
      </header>
      <metadata>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:title xml:lang="deu">Eine FPGA/DSP-Entwicklungsplattform für eingebettete audiosignalverarbeitende Echtzeitsysteme</dc:title>
          <dc:title xml:lang="eng">A FPGA/DSP development platform for embedded audiosignal-processing real time systems</dc:title>
          <dc:creator>Beyer, Marco</dc:creator>
          <dc:subject>ddc:004</dc:subject>
          <dc:description xml:lang="deu">Die vorliegende Dissertation beschreibt den Entwurf einer Plattform für die Entwicklung von eingebetteten audiosignalverarbeitenden Echtzeitsystemen, bestehend aus der Kombination eines digitalen Signalprozessors (DSP) und einer programmierbaren applikationsspezifischen Hardware (FPGA). Für diese Plattform wurde eine integrierte FPGA/DSP-Entwicklungsumgebung implementiert. Besonderes Augenmerk richtet sich hierbei auf die Hardware/Software-CoVerifikation in Form einer Hardware/Software-CoSimulation mittels VHDL-Board-Level-Simulation und auf die Interface-Synthese, der automatisierten Generierung von Schnittstellen zwischen Hardware und Software. Problem eines aus Hardware und Software bestehenden Systems ist die Verifikation der Hardware/Software-Schnittstellen und des Zusammenspiels von Hard- und Software im Gesamtsystem. Bestehende Ansätze verknüpfen in einer Hardware/Software-CoSimulation einen HDL-Simulator mit der Simulation der Software-Ausführung mit Hilfe einer synchronisierenden Software-Komponente. In dieser Arbeit wird der Ansatz untersucht, alle Teile des Systems gemeinsam in einer VHDL-Simulation zu verifizieren, wobei für den DSP, anstelle der oft in anderen Arbeiten eingesetzten Interface-Modelle (Busfunktionsmodelle), ein zyklengetreues VHDL-Modell des DSP-Core inklusive des Zeitverhaltens der Schnittstellen verwendet wird. Übergreifend erlaubt die zyklengenaue Simulation ein frühzeitiges Erkennen von Fehlern, die insbesondere bei der Simulation von sicherheitskritischen Anwendungen auf höheren Abstraktionsebenen nicht identifiziert werden können. Damit der Software-Entwickler nicht auf die gewohnten Debug-Möglichkeiten für die Software des DSP verzichten muss, ist im Rahmen dieser Arbeit für den HDL-Simulator ModelSim von Mentor Graphics eine entsprechende graphische Erweiterung implementiert worden. Dies ist eine wichtige Voraussetzung für das effektive Testen eines Algorithmus, der partitioniert in Hardware und Software arbeitet. Ein weiterer Bestandteil der Arbeit behandelt die Interface-Synthese und dabei die automatische Generierung von synthesefähigen VHDL-Modulen für die hardwareseitige Schnittstellenkommunikation und zugehöriger Softwarefunktionen, formuliert in C/Assembler, aus einer abstrakten Beschreibung in XML. Als Eingabesprache eignet sich XML aufgrund des plattform- und softwareunabhängigen Austausches von Daten zwischen verschiedenen Programmen und Rechnern in einem einheitlichen, allgemein verwendbaren, herstellerunabhängigen Format. Mit Hilfe von Style-Sheets können XML-Dokumente ebenso von Web-Browsern dargestellt und ausgedruckt werden und daher auch bei der Dokumentation eine wichtige Rolle spielen. Die Tauglichkeit des FPGA/DSP-Entwicklungssystems für die Entwicklung von Anwendungen aus dem audiosignalverarbeitenden Bereich konnte an einem praktischen Beispiel eines Prototypen für einen MPEG1-Layer3-Player erfolgreich demonstriert werden.</dc:description>
          <dc:description xml:lang="eng">This thesis describes the design of a platform for the development of embedded audiosignal-processing real time systems, consisting of a digital signal processor (DSP) and a programmable application-specific hardware (FPGA). For this platform an integrated FPGA/DSP development platform was implemented. Special attention is directed towards the hardware/software co-verification in form of a hardware/software co-simulation by means of VHDL board-level simulation and towards interface synthesis, an automated generation of interfaces between hardware and software. The Problem of systems consisting of hardware and software is the verification of the hardware/software interfaces and the interaction of hardware and software in the overall system. Existing solutions combine a HDL simulator in a hardware/software co-simulation with simulated software execution by means of synchronizing software components. In this work an approach is examined to verify all parts of the system together in a unified VHDL simulation in which for the DSP, in contrast to other systems using interface models (bus functional models), a cycle-true VHDL model of the DSP core including the timing parameters of the interfaces is used. Furthermore the cycle-true simulation permits early recognition of errors, which cannot be identified on higher abstraction levels with the simulation of security critical applications in particular. In order to provide the software developer with proper debug possibilities for the software of the DSP, an appropriate graphical extension for the HDL simulator ModelSim of Mentor Graphics was implemented in the context of this work. This is an important prerequisite for effectivly testing of algorithms in partitioned hardware/software environments. A further aspect of this work discusses the interface synthesis and thereby the automatic generation of synthesisable VHDL modules for interface communications on the hardware side and associated software functions, formulated in C/Assembler, from an abstract description in XML. Due to platform and software-independent exchange of data between different programs and computers in a uniform, generally usable, vendor-independent format, XML is a suitable input language. With the help of style sheets, XML documents can be represented and printed out by web browsers likewise and therefore play an important role in the area of documentation. The suitability of the FPGA/DSP development system for the development of applications in the area of audiosignal-processing real time systems could successfully demonstrated in a practical example prototype of a MPEG1-Layer3-Player.</dc:description>
          <dc:date>2004-01-20</dc:date>
          <dc:type>doctoralthesis</dc:type>
          <dc:type>doc-type:doctoralthesis</dc:type>
          <dc:format>application/pdf</dc:format>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/frontdoor/index/index/docId/682</dc:identifier>
          <dc:identifier>urn:nbn:de:kobv:83-opus-6769</dc:identifier>
          <dc:identifier>http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:kobv:83-opus-6769</dc:identifier>
          <dc:identifier>http://opus4.kobv.de/opus4-tuberlin/files/682/beyer_marco.pdf</dc:identifier>
          <dc:language>deu</dc:language>
          <dc:rights>Deutsches Urheberrecht mit Print on Demand (u.a. für Dissertationen empfohlen)</dc:rights>
        </oai_dc:dc>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
